The ``2-matrix_divided`` module
===============================

Using ``matrix_divided``
------------------------

Import the function:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test normal case:

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Test with floats:

    >>> matrix = [[1.1, -2.2, 3.3], [4.4, 5.5, -6.6]]
    >>> print(matrix_divided(matrix, 3))
    [[0.37, -0.73, 1.1], [1.47, 1.83, -2.2]]

Test error cases:

    >>> matrix = [[1, 2, 3], [4, 5, 6, 7]]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

    >>> print(matrix_divided([[1, 2], [3, 4]], 0))
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

    >>> print(matrix_divided("not a matrix", 3))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided([[1, 2], [3, 4]], "3"))
    Traceback (most recent call last):
    ...
    TypeError: div must be a number
